{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-25T15:38:08.190Z",
    "end": "2023-05-25T15:38:11.125Z",
    "duration": 2935,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2883aea2-fc66-4659-9e61-aac818a1c7f9",
      "title": "",
      "fullFile": "cypress/e2e/api_tests.cy.js",
      "file": "cypress/e2e/api_tests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49b6ffbf-96c6-4f33-a931-ee34cce5d8c5",
          "title": "API test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should call public APIs endpoint and verify data",
              "fullTitle": "API test should call public APIs endpoint and verify data",
              "timedOut": null,
              "duration": 2880,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// make get request to the provided api\ncy.request(\"https://api.publicapis.org/entries\").then(response => {\n  // expect response status to be 200\n  expect(response.status).to.eq(200);\n  // expect response body to have property 'entries'\n  expect(response.body).to.have.property(\"entries\");\n  // create new constant with entries whose category is equal to Authentication & Authorization\n  const authEntries = response.body.entries.filter(entry => entry.Category === \"Authentication & Authorization\");\n  // print the found entries\n  cy.log('Entries stored: ' + JSON.stringify(authEntries, null, 2));\n  console.log('Entries stored: ' + JSON.stringify(authEntries, null, 2));\n  // verify count\n  expect(authEntries.length).to.eq(7);\n});",
              "err": {},
              "uuid": "9c89f349-f730-48ac-8d5d-5ab3c3ba184b",
              "parentUUID": "49b6ffbf-96c6-4f33-a931-ee34cce5d8c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c89f349-f730-48ac-8d5d-5ab3c3ba184b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2880,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}